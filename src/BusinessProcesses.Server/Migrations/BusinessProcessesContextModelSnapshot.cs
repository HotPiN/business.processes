// <auto-generated />
using BusinessProcesses.Server.Domain;
using BusinessProcesses.Server.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BusinessProcesses.Server.Migrations
{
    [DbContext(typeof(BusinessProcessesContext))]
    partial class BusinessProcessesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("JobId");

                    b.Property<int>("NextId");

                    b.Property<int>("ParentId");

                    b.Property<string>("_Settings");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("NextId");

                    b.HasIndex("ParentId")
                        .IsUnique();

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.JobInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityId");

                    b.Property<int>("JobId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<DateTime>("NextRunOn");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("JobId");

                    b.ToTable("JobInstances");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.JobInstanceProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("JobId");

                    b.Property<int>("PropertyId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("PropertyId");

                    b.ToTable("JobInstanceProperty");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("JobId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("_Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PasswordHash")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.Activity", b =>
                {
                    b.HasOne("BusinessProcesses.Server.Domain.Models.Job", "Job")
                        .WithMany("Activities")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessProcesses.Server.Domain.Models.Activity", "Next")
                        .WithMany()
                        .HasForeignKey("NextId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessProcesses.Server.Domain.Models.Activity", "Parent")
                        .WithOne()
                        .HasForeignKey("BusinessProcesses.Server.Domain.Models.Activity", "ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.Job", b =>
                {
                    b.HasOne("BusinessProcesses.Server.Domain.Models.User", "CreatedByUser")
                        .WithMany("CreatedJobs")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessProcesses.Server.Domain.Models.User", "UpdatedByUser")
                        .WithMany("UpdatedJobs")
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.JobInstance", b =>
                {
                    b.HasOne("BusinessProcesses.Server.Domain.Models.Activity", "Activity")
                        .WithMany("JobInstances")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessProcesses.Server.Domain.Models.Job", "Job")
                        .WithMany("JobInstances")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.JobInstanceProperty", b =>
                {
                    b.HasOne("BusinessProcesses.Server.Domain.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BusinessProcesses.Server.Domain.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BusinessProcesses.Server.Domain.Models.Property", b =>
                {
                    b.HasOne("BusinessProcesses.Server.Domain.Models.Job", "Job")
                        .WithMany("Properties")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
